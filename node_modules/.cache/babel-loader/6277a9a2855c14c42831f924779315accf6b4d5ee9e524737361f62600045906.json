{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulfu\\\\Documents\\\\Best_Flag_Guesser\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { data } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [shuffledData, setShuffledData] = useState([]);\n  const [usedIndexes, setUsedIndexes] = useState([]);\n\n  // Randomize the order of the photos and answer options and prevent duplicates\n  useEffect(() => {\n    let tempData = data.slice(); // create a copy of the data\n    let tempShuffledData = [];\n    while (tempData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * tempData.length);\n      const randomItem = tempData.splice(randomIndex, 1)[0];\n      if (!usedIndexes.includes(randomIndex)) {\n        tempShuffledData.push(randomItem);\n        setUsedIndexes([...usedIndexes, randomIndex]);\n      }\n    }\n    setShuffledData(tempShuffledData);\n  }, [usedIndexes]);\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < shuffledData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleRestartButtonClick = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setUsedIndexes([]);\n    setShuffledData([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", shuffledData.length, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestartButtonClick,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shuffledData[currentQuestion].image,\n          alt: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: shuffledData[currentQuestion].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAnswerButtonClick(answer.isCorrect),\n            children: answer.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bFvasBHcTye0y2LNN27kBFz6XhI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","shuffledData","setShuffledData","usedIndexes","setUsedIndexes","tempData","slice","tempShuffledData","length","randomIndex","Math","floor","random","randomItem","splice","includes","push","handleAnswerButtonClick","isCorrect","nextQuestion","handleRestartButtonClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","answers","map","answer","index","text","_c","$RefreshReg$"],"sources":["C:/Users/gulfu/Documents/Best_Flag_Guesser/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { data } from './data';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [shuffledData, setShuffledData] = useState([]);\n  const [usedIndexes, setUsedIndexes] = useState([]);\n\n  // Randomize the order of the photos and answer options and prevent duplicates\n  useEffect(() => {\n    let tempData = data.slice(); // create a copy of the data\n    let tempShuffledData = [];\n\n    while (tempData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * tempData.length);\n      const randomItem = tempData.splice(randomIndex, 1)[0];\n\n      if (!usedIndexes.includes(randomIndex)) {\n        tempShuffledData.push(randomItem);\n        setUsedIndexes([...usedIndexes, randomIndex]);\n      }\n    }\n\n    setShuffledData(tempShuffledData);\n  }, [usedIndexes]);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < shuffledData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRestartButtonClick = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setUsedIndexes([]);\n    setShuffledData([]);\n  };\n\n  return (\n    <div className=\"container\">\n      {showScore ? (\n        <div className=\"score-section\">\n          You scored {score} out of {shuffledData.length}\n          <button onClick={handleRestartButtonClick}>Restart</button>\n        </div>\n      ) : (\n        <>\n          <div className=\"image-container\">\n            <img src={shuffledData[currentQuestion].image} alt=\"Question\" />\n          </div>\n          <div className=\"answers-container\">\n            <ul>\n              {shuffledData[currentQuestion].answers.map((answer, index) => (\n                <li key={index} onClick={() => handleAnswerButtonClick(answer.isCorrect)}>\n                  {answer.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}