{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulfu\\\\Documents\\\\Best_Flag_Guesser\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n// import { data } from './data';\nimport { easy_normalData } from './easy_normalData';\nimport { hardData } from './hardData';\nimport { extremeData } from './extremeData';\nimport { impossibleData } from './impossibleData';\nimport StartMenu from './Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('');\n  const [shuffledData, setShuffledData] = useState([]);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  useEffect(() => {\n    if (selectedDifficulty === 'easy/normal') {\n      setShuffledData(shuffleArray(easy_normalData));\n    } else if (selectedDifficulty === 'hard') {\n      setShuffledData(shuffleArray(hardData));\n    } else if (selectedDifficulty === 'extreme') {\n      setShuffledData(shuffleArray(extremeData));\n    } else if (selectedDifficulty === 'impossible') {\n      setShuffledData(shuffleArray(impossibleData));\n    }\n  }, [selectedDifficulty]);\n  useEffect(() => {\n    if (shuffledData.length > 0) {\n      var _shuffledData$current;\n      setShuffledAnswers(shuffleArray((_shuffledData$current = shuffledData[currentQuestion]) === null || _shuffledData$current === void 0 ? void 0 : _shuffledData$current.answers));\n    }\n  }, [shuffledData, currentQuestion]);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < 20) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const restartGame = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n  const handleDifficultySelect = difficulty => {\n    setSelectedDifficulty(difficulty);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: selectedDifficulty === '' ? /*#__PURE__*/_jsxDEV(StartMenu, {\n      onSelectDifficulty: handleDifficultySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"You scored \", score, \" out of 20\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: shuffledData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shuffledData[currentQuestion].image,\n              alt: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answers-container\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: shuffledAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleAnswerButtonClick(answer.isCorrect),\n                children: answer.text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NACp06MK11vrz+oUOFG2RI/BC4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","easy_normalData","hardData","extremeData","impossibleData","StartMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","selectedDifficulty","setSelectedDifficulty","shuffledData","setShuffledData","shuffledAnswers","setShuffledAnswers","shuffleArray","length","_shuffledData$current","answers","array","shuffledArray","i","j","Math","floor","random","handleAnswerButtonClick","isCorrect","nextQuestion","restartGame","handleDifficultySelect","difficulty","className","children","onSelectDifficulty","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","image","alt","map","answer","index","text","_c","$RefreshReg$"],"sources":["C:/Users/gulfu/Documents/Best_Flag_Guesser/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n// import { data } from './data';\nimport { easy_normalData } from './easy_normalData';\nimport { hardData } from './hardData';\nimport { extremeData } from './extremeData';\nimport { impossibleData } from './impossibleData';\nimport StartMenu from './Menu';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('');\n  const [shuffledData, setShuffledData] = useState([]);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n\n  useEffect(() => {\n    if (selectedDifficulty === 'easy/normal') {\n      setShuffledData(shuffleArray(easy_normalData));\n    } else if (selectedDifficulty === 'hard') {\n      setShuffledData(shuffleArray(hardData));\n    } else if (selectedDifficulty === 'extreme') {\n      setShuffledData(shuffleArray(extremeData));\n    } else if (selectedDifficulty === 'impossible') {\n      setShuffledData(shuffleArray(impossibleData));\n    }\n  }, [selectedDifficulty]);\n\n  useEffect(() => {\n    if (shuffledData.length > 0) {\n      setShuffledAnswers(shuffleArray(shuffledData[currentQuestion]?.answers));\n    }\n  }, [shuffledData, currentQuestion]);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < 20) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const restartGame = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  const handleDifficultySelect = (difficulty) => {\n    setSelectedDifficulty(difficulty);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"container\">\n      {selectedDifficulty === '' ? (\n        <StartMenu onSelectDifficulty={handleDifficultySelect} />\n      ) : (\n        <>\n          {showScore ? (\n            <div className=\"score-section\">\n              <h1>You scored {score} out of 20</h1>\n              <button onClick={restartGame}>Restart</button>\n            </div>\n          ) : (\n            <>\n              {shuffledData.length > 0 ? (\n                <>\n                  <div className=\"image-container\">\n                    <img src={shuffledData[currentQuestion].image} alt=\"Question\" />\n                  </div>\n                  <div className=\"answers-container\">\n                    <ul>\n                      {shuffledAnswers.map((answer, index) => (\n                        <li key={index} onClick={() => handleAnswerButtonClick(answer.isCorrect)}>\n                          {answer.text}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              ) : (\n                <p>Loading...</p>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}