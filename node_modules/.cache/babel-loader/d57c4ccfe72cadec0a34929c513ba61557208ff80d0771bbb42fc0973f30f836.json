{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulfu\\\\Documents\\\\Best_Flag_Guesser\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { data } from './data';\nimport { easy_normalData } from './easy_normalData';\nimport { hardData } from './hardData';\nimport { extremeData } from './extremeData';\nimport { impossibleData } from './impossibleData';\nimport StartMenu from './Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('');\n  const [restartGame, setRestartGame] = useState(false);\n\n  // Randomize the order of the photos and answer options\n  const shuffledData = data.sort(() => Math.random() - 0.5);\n  const shuffledAnswers = shuffledData[currentQuestion].answers.sort(() => Math.random() - 0.5);\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < 20 || shuffledData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleRestartButtonClick = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setSelectedDifficulty('');\n    setRestartGame(true);\n  };\n  const handleDifficultySelect = difficulty => {\n    setSelectedDifficulty(difficulty);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setRestartGame(false);\n  };\n  const getCurrentData = () => {\n    switch (selectedDifficulty) {\n      case 'easy/normal':\n        return easy_normalData;\n      case 'hard':\n        return hardData;\n      case 'extreme':\n        return extremeData;\n      case 'impossible':\n        return impossibleData;\n      default:\n        return [];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: selectedDifficulty === '' || restartGame ? /*#__PURE__*/_jsxDEV(StartMenu, {\n      onSelectDifficulty: handleDifficultySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"You scored \", score, \" out of 20\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestartButtonClick,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getCurrentData()[currentQuestion].image,\n            alt: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: getCurrentData()[currentQuestion].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAnswerButtonClick(answer.isCorrect),\n              children: answer.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ThdpZMy1CEHDV4qJS9Q9escRExE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","easy_normalData","hardData","extremeData","impossibleData","StartMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","selectedDifficulty","setSelectedDifficulty","restartGame","setRestartGame","shuffledData","sort","Math","random","shuffledAnswers","answers","handleAnswerButtonClick","isCorrect","nextQuestion","length","handleRestartButtonClick","handleDifficultySelect","difficulty","getCurrentData","className","children","onSelectDifficulty","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","image","alt","map","answer","index","text","_c","$RefreshReg$"],"sources":["C:/Users/gulfu/Documents/Best_Flag_Guesser/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { data } from './data';\nimport { easy_normalData } from './easy_normalData';\nimport { hardData } from './hardData';\nimport { extremeData } from './extremeData';\nimport { impossibleData } from './impossibleData';\n\nimport StartMenu from './Menu';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('');\n  const [restartGame, setRestartGame] = useState(false);\n\n  // Randomize the order of the photos and answer options\n  const shuffledData = data.sort(() => Math.random() - 0.5);\n  const shuffledAnswers = shuffledData[currentQuestion].answers.sort(() => Math.random() - 0.5);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < 20 || shuffledData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRestartButtonClick = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setSelectedDifficulty('');\n    setRestartGame(true);\n  };\n\n  const handleDifficultySelect = (difficulty) => {\n    setSelectedDifficulty(difficulty);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setRestartGame(false);\n  };\n\n  const getCurrentData = () => {\n    switch (selectedDifficulty) {\n      case 'easy/normal':\n        return easy_normalData;\n      case 'hard':\n        return hardData;\n      case 'extreme':\n        return extremeData;\n      case 'impossible':\n        return impossibleData;\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {selectedDifficulty === '' || restartGame ? (\n        <StartMenu onSelectDifficulty={handleDifficultySelect} />\n      ) : (\n        <>\n          {showScore ? (\n            <div className=\"score-section\">\n              <h1>You scored {score} out of 20</h1>\n              <button onClick={handleRestartButtonClick}>Restart</button>\n            </div>\n          ) : (\n            <>\n              <div className=\"image-container\">\n                <img src={getCurrentData()[currentQuestion].image} alt=\"Question\" />\n              </div>\n              <div className=\"answers-container\">\n                <ul>\n                  {getCurrentData()[currentQuestion].answers.map((answer, index) => (\n                    <li key={index} onClick={() => handleAnswerButtonClick(answer.isCorrect)}>\n                      {answer.text}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}