{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulfu\\\\Documents\\\\Best_Flag_Guesser\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { data } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // Randomize the order of the photos and answer options\n  const shuffledData = data.sort(() => Math.random() - 0.5);\n  const shuffledAnswers = shuffledData[currentQuestion].answers.sort(() => Math.random() - 0.5);\n  const [data, setData] = useState(shuffledData);\n  const [answers, setAnswers] = useState(shuffledData[0].answers.sort(() => Math.random() - 0.5));\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const remainingData = shuffledData.splice(0, currentQuestion).concat(shuffledData.splice(1));\n    if (remainingData.length > 0) {\n      // Randomize the order of the remaining questions and answers\n      const shuffledRemainingData = remainingData.sort(() => Math.random() - 0.5);\n      const shuffledAnswers = shuffledRemainingData[0].answers.sort(() => Math.random() - 0.5);\n      setCurrentQuestion(0);\n      setData(shuffledRemainingData);\n      setAnswers(shuffledAnswers);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleRestartButtonClick = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", shuffledData.length, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestartButtonClick,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shuffledData[currentQuestion].image,\n          alt: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: shuffledAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleAnswerButtonClick(answer.isCorrect),\n            children: answer.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lxKm0WtFdF9Bzw97Hb/v18XksSk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","shuffledData","sort","Math","random","shuffledAnswers","answers","setData","setAnswers","handleAnswerButtonClick","isCorrect","remainingData","splice","concat","length","shuffledRemainingData","handleRestartButtonClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","map","answer","index","text","_c","$RefreshReg$"],"sources":["C:/Users/gulfu/Documents/Best_Flag_Guesser/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { data } from './data';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  \n\n  // Randomize the order of the photos and answer options\n  const shuffledData = data.sort(() => Math.random() - 0.5);\n  const shuffledAnswers = shuffledData[currentQuestion].answers.sort(() => Math.random() - 0.5);\n  const [data, setData] = useState(shuffledData);\n  const [answers, setAnswers] = useState(shuffledData[0].answers.sort(() => Math.random() - 0.5));\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const remainingData = shuffledData.splice(0, currentQuestion).concat(shuffledData.splice(1));\n    if (remainingData.length > 0) {\n      // Randomize the order of the remaining questions and answers\n      const shuffledRemainingData = remainingData.sort(() => Math.random() - 0.5);\n      const shuffledAnswers = shuffledRemainingData[0].answers.sort(() => Math.random() - 0.5);\n      setCurrentQuestion(0);\n      setData(shuffledRemainingData);\n      setAnswers(shuffledAnswers);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRestartButtonClick = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"container\">\n      {showScore ? (\n        <div className=\"score-section\">\n          You scored {score} out of {shuffledData.length}\n          <button onClick={handleRestartButtonClick}>Restart</button>\n        </div>\n      ) : (\n        <>\n          <div className=\"image-container\">\n            <img src={shuffledData[currentQuestion].image} alt=\"Question\" />\n          </div>\n          <div className=\"answers-container\">\n            <ul>\n              {shuffledAnswers.map((answer, index) => (\n                <li key={index} onClick={() => handleAnswerButtonClick(answer.isCorrect)}>\n                  {answer.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}