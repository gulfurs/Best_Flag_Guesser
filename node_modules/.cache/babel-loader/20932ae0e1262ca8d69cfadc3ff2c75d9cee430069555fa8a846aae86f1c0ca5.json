{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulfu\\\\Documents\\\\Best_Flag_Guesser\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { data } from './data';\nimport { easy_normalData } from './easy_normalData';\nimport { extremeData } from './extremeData';\nimport StartMenu from './Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  // const [quizStarted, setQuizStarted] = useState(false);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('');\n\n  // Randomize the order of the photos and answer options\n  const shuffledData = data.sort(() => Math.random() - 0.5);\n  const shuffledAnswers = shuffledData[currentQuestion].answers.sort(() => Math.random() - 0.5);\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < 20) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const restartGame = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    // setQuizStarted(false);\n  };\n\n  const handleDifficultySelect = difficulty => {\n    setSelectedDifficulty(difficulty);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    showScore(0);\n  };\n  const getCurrentData = () => {\n    switch (selectedDifficulty) {\n      case 'easy':\n        return easy_normalData;\n      case 'medium':\n        return extremeData;\n      case 'hard':\n        return data;\n      default:\n        return [];\n    }\n  };\n\n  // const startQuiz = () => {\n  //   setQuizStarted(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: selectedDifficulty === '' ? /*#__PURE__*/_jsxDEV(StartMenu, {\n      onSelectDifficulty: handleDifficultySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" You scored \", score, \" out of 20 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getCurrentData()[currentQuestion].image,\n            alt: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: getCurrentData()[currentQuestion].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleAnswerButtonClick(answer.isCorrect),\n              children: answer.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"XURkGA0tdaJzD4XE5UPv1noFI7I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","easy_normalData","extremeData","StartMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","selectedDifficulty","setSelectedDifficulty","shuffledData","sort","Math","random","shuffledAnswers","answers","handleAnswerButtonClick","isCorrect","nextQuestion","restartGame","handleDifficultySelect","difficulty","getCurrentData","className","children","onSelectDifficulty","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","image","alt","map","answer","index","text","_c","$RefreshReg$"],"sources":["C:/Users/gulfu/Documents/Best_Flag_Guesser/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { data } from './data';\nimport { easy_normalData } from './easy_normalData';\nimport { extremeData } from './extremeData';\nimport StartMenu from './Menu';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  // const [quizStarted, setQuizStarted] = useState(false);\n  const [selectedDifficulty, setSelectedDifficulty] = useState('');\n\n  // Randomize the order of the photos and answer options\n  const shuffledData = data.sort(() => Math.random() - 0.5);\n  const shuffledAnswers = shuffledData[currentQuestion].answers.sort(() => Math.random() - 0.5);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < 20) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const restartGame = () => {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    // setQuizStarted(false);\n  }\n\n  const handleDifficultySelect = (difficulty) => {\n    setSelectedDifficulty (difficulty);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    showScore(0);\n  }\n\n  const getCurrentData = () => {\n    switch (selectedDifficulty) {\n      case 'easy':\n        return easy_normalData;\n      case 'medium':\n          return extremeData;\n      case 'hard':\n        return data;\n      default:\n        return[];\n    }\n  }\n\n  // const startQuiz = () => {\n  //   setQuizStarted(true);\n  // };\n\n  return (\n      <div className=\"container\">\n        {selectedDifficulty === '' ? (\n          <StartMenu onSelectDifficulty={handleDifficultySelect} />\n        ) : (\n          <>\n            {showScore ? (\n              <div className=\"score-section\">\n               <h1> You scored {score} out of 20 </h1>\n                <button onClick={restartGame}>Restart</button>\n              </div>\n            ) : (\n              <>\n                <div className=\"image-container\">\n                  <img src={getCurrentData()[currentQuestion].image} alt=\"Question\" />\n                </div>\n                <div className=\"answers-container\">\n                  <ul>\n                    {getCurrentData()[currentQuestion].answers.map((answer, index) => (\n                      <li key={index} onClick={() => handleAnswerButtonClick(answer.isCorrect)}>\n                        {answer.text}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}